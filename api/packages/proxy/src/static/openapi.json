{
  "openapi": "3.0.2",
  "info": {
    "version": "v1",
    "title": "Registre de Preuve de Covoiturage",
    "description": "Le registre de preuve de covoiturage est à la fois un label et une\nplate-forme technique pour\n\ndistribuer à grande échelle des incitations monétaires ou non monétaires,\nsans risque de\n\nfraude massive.\n",
    "license": {
      "name": "GNU Affero General Public License v3.0"
    },
    "contact": {
      "name": "Covoiturage",
      "url": "http://covoiturage.beta.gouv.fr/",
      "email": "contact@covoiturage.beta.gouv.fr"
    }
  },
  "servers": [
    {
      "url": "https://api-staging.covoiturage.beta.gouv",
      "description": "staging"
    },
    {
      "url": "https://api.covoiturage.beta.gouv",
      "description": "production"
    },
    {
      "url": "http://localhost:8080",
      "description": "local"
    }
  ],
  "paths": {
    "/auth/ping": {
      "get": {
        "summary": "check access and auth with the server\n",
        "operationId": "authPing",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Server reachable and user is connected",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "oneOf": [
                    {}
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/check": {
      "get": {
        "summary": "check access and auth with the server.\nReturns the user user\n",
        "operationId": "authCheck",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Server reachable and user is connected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "Sign a user in",
        "operationId": "authSignIn",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "description": "Login and password",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully signed user in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgotten": {
      "post": {
        "summary": "Request a forgotten password token",
        "operationId": "authForgotten",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully signed user in",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Email not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset": {
      "post": {
        "summary": "Reset a user password",
        "operationId": "authReset",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "reset",
                  "token"
                ],
                "properties": {
                  "reset": {
                    "description": "Reset identifier to retrieve the encrypted token",
                    "type": "string"
                  },
                  "token": {
                    "description": "Token sent by email to the user. Encrypted in db",
                    "type": "string"
                  },
                  "password": {
                    "description": "The new password",
                    "type": "string",
                    "minLength": 6,
                    "maxLength": 128
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been updated",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Wrong token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Reset identifier not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "No timestamp for the creation of the forgotten password token.\nA new token must be created.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List all users",
        "operationId": "usersList",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many items to return at one time (max 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a user",
        "operationId": "usersCreate",
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Retrieve a user",
        "operationId": "usersRead",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "operationId": "usersUpdate",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "operationId": "usersDelete",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted user id",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/invite": {
      "post": {
        "summary": "Invite a user",
        "operationId": "usersInvite",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User Invited",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/options": {
      "get": {
        "summary": "Retrieve a user's options",
        "operationId": "userOptionsList",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "option-name-1": {
                      "type": "string"
                    },
                    "option-name-2": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Set a user's options",
        "operationId": "userOptionsSet",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "option-name-1": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "option-name-1": {
                      "type": "string"
                    },
                    "option-name-2": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/options/:key": {
      "get": {
        "summary": "Retrieve a user's option",
        "operationId": "userOptionsRead",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Option key to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "option-name-1": {
                      "type": "string"
                    },
                    "option-name-2": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user's option",
        "operationId": "userOptionsDelete",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "Option key to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "option-name-1": {
                      "type": "string"
                    },
                    "option-name-2": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journeys/": {
      "get": {
        "summary": "Retrieve a list of all journeys (visible to the connected user)",
        "operationId": "journeysList",
        "tags": [
          "Journeys"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "$ref": "#/components/schemas/Journey"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Submit a journey to the API (client-side)",
        "operationId": "journeysPost",
        "tags": [
          "Journeys"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Journey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "type": "Created"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "type": "BadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/journeys/{id}": {
      "get": {
        "summary": "Retrieve a single journey",
        "operationId": "journeysRead",
        "tags": [
          "Journeys"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Journey"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/journeys/push": {
      "post": {
        "summary": "Submit a journey to the API (server-side)",
        "operationId": "journeysPush",
        "tags": [
          "Journeys"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Journey"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "type": "Created"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "type": "BadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/operators/applications": {
      "post": {
        "summary": "Create a new application",
        "operationId": "operatorsApplicationsCreate",
        "tags": [
          "Operators"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Application's name",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Application created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "app": {
                      "type": "string"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "identity": {
        "required": [
          "phone"
        ],
        "properties": {
          "firstname": {
            "type": "string"
          },
          "lastname": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "over_18": {
            "type": "boolean"
          }
        }
      },
      "position": {
        "required": [
          "datetime"
        ],
        "properties": {
          "datetime": {
            "type": "string",
            "format": "datetime"
          },
          "lat": {
            "type": "number",
            "format": "float"
          },
          "lon": {
            "type": "number",
            "format": "float"
          },
          "insee": {
            "type": "string"
          },
          "literal": {
            "type": "string"
          }
        }
      },
      "User": {
        "required": [
          "id",
          "email",
          "password",
          "group",
          "role"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "group": {
            "type": "string",
            "enum": [
              "registry",
              "aom",
              "operators"
            ]
          },
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ],
            "default": "user"
          }
        }
      },
      "Users": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/User"
        }
      },
      "Journey": {
        "properties": {
          "journey_id": {
            "type": "string"
          },
          "operator_class": {
            "type": "string",
            "enum": [
              "A",
              "B",
              "C"
            ]
          },
          "passenger": {
            "properties": {
              "identity": {
                "$ref": "#/components/schemas/identity"
              },
              "start": {
                "$ref": "#/components/schemas/position"
              },
              "end": {
                "$ref": "#/components/schemas/position"
              },
              "seats": {
                "type": "integer",
                "format": "int32",
                "default": 1
              },
              "cost": {
                "type": "number",
                "format": "float",
                "description": "cost in euro cents"
              },
              "distance": {
                "type": "integer",
                "format": "int32",
                "description": "distance in meters"
              },
              "duration": {
                "type": "integer",
                "format": "int32",
                "description": "duration in seconds"
              }
            }
          },
          "driver": {
            "properties": {
              "identity": {
                "$ref": "#/components/schemas/identity"
              },
              "start": {
                "$ref": "#/components/schemas/position"
              },
              "end": {
                "$ref": "#/components/schemas/position"
              },
              "cost": {
                "type": "number",
                "format": "float",
                "description": "cost in euro cents"
              },
              "distance": {
                "type": "integer",
                "format": "int32",
                "description": "distance in meters"
              },
              "duration": {
                "type": "integer",
                "format": "int32",
                "description": "duration in seconds"
              }
            }
          }
        }
      },
      "Error": {
        "required": [
          "type",
          "message"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}