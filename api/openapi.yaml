# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md
# https://swagger.io/specification/
openapi: 3.0.2
info:
  version: v1
  title: Registre National de Preuve de Covoiturage
  description: |
    Le registre de preuve de covoiturage est à la fois un label et une plate-forme technique pour
    distribuer à grande échelle des incitations monétaires ou non monétaires, sans risque de
    fraude massive.
  license:
    name: GNU Affero General Public License v3.0
  contact:
    name: Covoiturage
    url: http://covoiturage.beta.gouv.fr/
    email: contact@covoiturage.beta.gouv.fr
servers:
  - url: http://localhost:8000/v1
    description: local
  - url: https://registry-staging.covoiturage.beta.gouv/v1
    description: staging
  - url: https://registry.covoiturage.beta.gouv/v1
    description: production
paths:
  /auth/signup:
    post:
      summary: Sign a user up
      operationId: authSignUp
      tags:
        - Auth
      requestBody:
        description: User to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '200':
          description: Successfully signed user up
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /auth/signin:
    post:
      summary: Sign a user in
      operationId: authSignIn
      tags:
        - Auth
      requestBody:
        description: Login and password
        required: true
        content:
          application/json:
            schema:
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successfully signed user in
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users:
    get:
      summary: List all users
      operationId: listUsers
      tags:
        - Users
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Array of users
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Users"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      required:
        - id
        - email
        - password
        - group
        - role
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
        group:
          type: string
          enum:
            - 'registry'
            - 'aom'
            - 'operator'
        role:
          type: string
          enum:
            - 'admin'
            - 'user'
          default: 'user'
    NewUser:
      required:
        - email
        - password
        - group
      properties:
        email:
          type: string
        password:
          type: string
        group:
          type: string
          enum:
            - 'registry'
            - 'aom'
            - 'operator'
        role:
          type: string
          enum:
            - 'admin'
            - 'user'
          default: 'user'
    Users:
      type: array
      items:
        $ref: "#/components/schemas/User"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
          